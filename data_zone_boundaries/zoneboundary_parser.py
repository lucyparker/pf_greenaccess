import json

spaces = open('zoneboundaries.geojson')

test_json = '{"type": "FeatureCollection", "name": "zoneboundaries", "crs": { "type": "name", "properties": { "name": "urn:ogc:def:crs:OGC:1.3:CRS84" } }, "features": [{ "type": "Feature", "properties": { "OBJECTID": 2, "DataZone": "S01006507", "Name": "Culter - 02", "TotPop2011": 836, "ResPop2011": 836, "HHCnt2011": 364, "StdAreaHa": 22.349739, "StdAreaKm2": 0.223498, "Shape_Leng": 2900.40636249, "Shape_Area": 221746.838686 }, "geometry": { "type": "MultiPolygon", "coordinates": [ [ [ [ -2.273543043088813, 57.104494722060245 ], [ -2.273325570298034, 57.104485108709099 ], [ -2.273196146742979, 57.104493278199207 ], [ -2.273047795812289, 57.104121071961586 ], [ -2.272986104707079, 57.103873802497155 ], [ -2.272957030054116, 57.103801237382264 ], [ -2.272880729990794, 57.103762479782979 ], [ -2.272789137085074, 57.103715967080745 ], [ -2.272787558771792, 57.103714587118247 ], [ -2.272770548684448, 57.103709027678597 ], [ -2.272242445125738, 57.103536541894862 ] ] ] ] } }]}'

l = json.loads(spaces.read())
t = json.loads(test_json)

dundeeZone = ["S01007682", "S01007683", "S01007684", "S01007685", "S01007686", "S01007687", "S01007688", "S01007689", "S01007690", "S01007691", "S01007692", "S01007693", "S01007694", "S01007695", "S01007696", "S01007697", "S01007698", "S01007699", "S01007700", "S01007701", "S01007702", "S01007703", "S01007704", "S01007705", "S01007706", "S01007707", "S01007708", "S01007709", "S01007710", "S01007711", "S01007712", "S01007713", "S01007714", "S01007715", "S01007716", "S01007717", "S01007718", "S01007719", "S01007720", "S01007721", "S01007722", "S01007723", "S01007724", "S01007725", "S01007726", "S01007727", "S01007728", "S01007729", "S01007730", "S01007731", "S01007732", "S01007733", "S01007734", "S01007735", "S01007736", "S01007737", "S01007738", "S01007739", "S01007740", "S01007741", "S01007742", "S01007743", "S01007744", "S01007745", "S01007746", "S01007747", "S01007748", "S01007749", "S01007750", "S01007751", "S01007752","S01007753","S01007754","S01007755","S01007756","S01007757","S01007758","S01007759","S01007760","S01007761","S01007762","S01007763","S01007764","S01007765","S01007766","S01007767","S01007768","S01007769","S01007770","S01007771","S01007772","S01007773","S01007774","S01007775","S01007776","S01007777","S01007778","S01007779","S01007780","S01007781","S01007782","S01007783","S01007784","S01007785","S01007786","S01007787","S01007788","S01007789","S01007790","S01007791","S01007792","S01007793","S01007794","S01007795","S01007796","S01007797","S01007798","S01007799","S01007800","S01007801","S01007802","S01007803","S01007804","S01007805","S01007806","S01007807","S01007808","S01007809","S01007810","S01007811","S01007812","S01007813","S01007814","S01007815","S01007816","S01007817","S01007818","S01007819","S01007820","S01007821","S01007822","S01007823","S01007824","S01007825","S01007826","S01007827","S01007828","S01007829","S01007830","S01007831","S01007832","S01007833","S01007834","S01007835","S01007836","S01007837","S01007838","S01007839","S01007840","S01007841","S01007842","S01007843","S01007844","S01007845","S01007846","S01007847","S01007848","S01007849","S01007850","S01007851","S01007852","S01007853","S01007854","S01007855","S01007856","S01007857","S01007858","S01007859","S01007860","S01007861","S01007862","S01007863","S01007864","S01007865","S01007866","S01007867","S01007868","S0100786","S01007869"]

def checkLocation(dataPoint):
    zone = dataPoint["properties"]["DataZone"]
    return zone in dundeeZone

allFeatures = l["features"]
validFeatures = []
saveCount = 0

for feature in allFeatures:
    if checkLocation(feature):
        saveCount = saveCount + 1
        validFeatures.append(feature)
        print("Zone " + str(saveCount) + " saved.")

l["features"] = validFeatures
del l['crs']
output = json.dumps(l)

filteredspaces = open('processed_zoneboundaries.geojson', 'w')
filteredspaces.write(output)
filteredspaces.close()
